---

- name: make sure output directories exists
  file:
    path: "{{ output_directory }}/pkgs/{{ ansible_distribution }}/{{ ansible_distribution_release }}"
    state: directory
    recurse: true

- name: retrieve generated bmdeb
  copy:
    remote_src: true
    src: "/var/lib/dkms/{{ item[0].name }}/{{ item[0].version }}/bmdeb/{{ item[0].name | replace('_', '-') }}-modules-{{ item[1].version }}-{{ item[1].arch }}_{{ item[0].version }}_{{ item[1].arch }}.deb"
    dest: "{{ output_directory }}/pkgs/{{ ansible_distribution }}/{{ ansible_distribution_release }}"
  with_nested:
    - "{{ drivers }}"
    - "{{ kernels }}"

- name: generate Packages.gz
  shell: "dpkg-scanpackages -m . | gzip -f9 > Packages.gz"
  args:
    chdir: "{{ output_directory }}/pkgs/{{ ansible_distribution }}/{{ ansible_distribution_release }}"

- name: generate d-i for preseed
  template:
    src: d-i.j2
    dest: "{{ output_directory }}/d-i/{{ ansible_distribution }}/{{ ansible_distribution_release }}/{{ item[0].name }}-{{ item[1].version }}-{{ item[1].arch }}"
  with_nested:
    - "{{ drivers | get_more_recent_versions }}"
    - "{{ kernels }}"
