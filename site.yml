---

# unarchive
# get_url
- hosts: all
  tasks:
    - name: install necessary resources and wanted kernel
      apt:
        name: "{{ item }}"
        update_cache: yes
      with_items:
        - debhelper
        - dkms
        - "linux-image-{{ kernel_version }}-{{ kernel_arch }}"
        - "linux-headers-{{ kernel_version }}-{{ kernel_arch }}"
        - bash-completion
        - vim

    - name: download drivers
      unarchive:
        src: "{{ item.url }}"
        dest: /usr/src
        copy: no
        creates: "/usr/src/{{ item.name }}-{{ item.version }}"
      with_items: "{{ drivers }}"
      when: item.custom_retrieval is not defined

    - name: custom retrieval of drivers
      include: "custom_retrieval/{{ item.custom_retrieval }}
        name={{ item.name}}
        url={{ item.url }}
        version={{ item.version }}"
      with_items: "{{ drivers }}"
      when: item.custom_retrieval is defined

    - name: generate dkms.conf
      template:
        src: dkms.conf.j2
        dest: "/usr/src/{{ item.name }}-{{ item.version }}/dkms.conf"
        force: no
      with_items: "{{ drivers }}"

# add -k option to dkms https://wiki.archlinux.org/index.php/Dynamic_Kernel_Module_Support#DKMS_package_creation

    - name: dkms add
      shell: "dkms add -m {{ item.name }} -v {{ item.version }} -k {{ kernel_version }}-{{ kernel_arch }}"
      args:
        creates: "/var/lib/dkms/{{ item.name }}/{{ item.version }}"
      with_items: "{{ drivers }}"

    - name: dkms build
      shell: "dkms build -m {{ item.name }} -v {{ item.version }} -k {{ kernel_version }}-{{ kernel_arch }}"
      with_items: "{{ drivers }}"

      # Not working for the moment due to a bug in dkms
    - name: dkms mkdeb
      shell: "dkms mkdeb -m {{ item.name }} -v {{ item.version }} -k {{ kernel_version }}-{{ kernel_arch }}"
      with_items: "{{ drivers }}"

    - name: dkms mkbmdeb
      shell: "dkms mkbmdeb -m {{ item.name }} -v {{ item.version }} -k {{ kernel_version }}-{{ kernel_arch }}"
      with_items: "{{ drivers }}"

    - name: retrieve generated bmdeb
      copy:
        remote_src: true
        src: "/var/lib/dkms/{{ item.name }}/{{ item.version }}/bmdeb/{{ item.name | replace('_', '-') }}-modules-{{ kernel_version }}-{{ kernel_arch }}_{{ item.version }}_{{ kernel_arch }}.deb"
        dest: /vagrant
      with_items: "{{ drivers }}"
